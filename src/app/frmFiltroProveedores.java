/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

import Modelo.UtilidadFiltro;
import java.awt.BorderLayout;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Arrays;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author jsanchez
 */
public class frmFiltroProveedores extends javax.swing.JInternalFrame {

    /**
     * Creates new form frmFiltroProveedores
     */
    public frmFiltroProveedores() {
        initComponents();
       // this.setLocationRelativeTo(null);
        JTextField filterField = UtilidadFiltro.createRowFilter(jtblproveedores);
        JPanel txtBuscar = new JPanel();
        txtBuscar.add(filterField);
        
        jPanel1.add(txtBuscar, BorderLayout.NORTH);
                
        
        TableModel tableModel = createTableModel();
        JTable table = new JTable(tableModel);
        jtblproveedores.setModel(tableModel);
        
    }

    private static TableModel createTableModel() {

        Vector<String> columns = new Vector<>(Arrays.asList("Documento", "Nombre Proveedor", "Nombre Contacto Proveedor","Telefono" , "Municipio", "Departamento"));
        Vector<Vector<Object>> rows = new Vector<>();
        conexionppi conexion = new conexionppi();
        PreparedStatement ps;
        ResultSet rs;
        try {
            Connection Rconectar;
            Rconectar = conexion.conectar();
            ps = Rconectar.prepareStatement("SELECT nitproveedor,nombreproveedor,contactoproveedor,telefonoproveedor,tblproveedores.idmunicipio, municipio,tblmunicipios.iddepartamento,tbldepartamentos.departamento from tblproveedores, tblmunicipios, tbldepartamentos WHERE tblproveedores.idmunicipio = tblmunicipios.idmunicipio and tblmunicipios.iddepartamento = tbldepartamentos.iddepartamento ");
            rs = ps.executeQuery();
        
        //DataFactory dataFactory = new DataFactory();
            while (rs.next())  {
                Vector<Object> vectorpro = new Vector<>();
                vectorpro.add(rs.getString("nitproveedor"));
                vectorpro.add(rs.getString("nombreproveedor"));
                vectorpro.add(rs.getString("contactoproveedor"));
                vectorpro.add(rs.getString("telefonoproveedor"));
                vectorpro.add(rs.getString("municipio"));
                vectorpro.add(rs.getString("departamento"));
                rows.add(vectorpro);
            }    
            } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }        
        
        DefaultTableModel dtm = new DefaultTableModel(rows, columns) {
            @Override
            public Class<?> getColumnClass(int columnIndex) {
                return columnIndex == 2 ? Integer.class : String.class;
            }
        };
        return dtm;
     } 
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblproveedores = new javax.swing.JTable();
        btnSalir = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("FILTRO DE PROVEEDORES");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jtblproveedores = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        jtblproveedores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jtblproveedores.setFocusable(false);
        jtblproveedores.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jtblproveedores);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(262, 262, 262)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                .addGap(179, 179, 179))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addGap(19, 19, 19))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(93, 93, 93)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        btnSalir.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Salir-icon.png"))); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnBuscar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Search-icon.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(21, 21, 21))
            .addGroup(layout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
      /*  
        bandera = false;
        conexionppi conexion = new conexionppi();

        try {
            Connection Rconectar;
            Rconectar = conexion.conectar();
            ps = Rconectar.prepareStatement("SELECT nitproveedor,idtipodocumento,nombreproveedor,contactoproveedor,direccionproveedor,tblproveedores.idmunicipio, municipio,tblmunicipios.iddepartamento,departamento,telefonoproveedor,correo,tipoproveedor,tiposervicio, tipodocumentocompra, fechaingreso, contrato,descripcionbienservicio from tblproveedores, tblmunicipios, tbldepartamentos where tblproveedores.nitproveedor = ? and tblproveedores.idmunicipio = tblmunicipios.idmunicipio and tblmunicipios.iddepartamento = tbldepartamentos.iddepartamento");
            ps.setString(1, txtDocumento.getText());

            rs = ps.executeQuery();

            if (rs.next()) {

                cbxTipoDocumento.setSelectedIndex(rs.getInt("idtipodocumento"));
                txtNombreProveedor.setText(rs.getString("nombreproveedor"));
                BanderaNombreProveedor = true;
                txtContactoProveedor.setText(rs.getString("contactoproveedor"));
                BanderaContrato = true;
                txtDirección.setText(rs.getString("direccionproveedor"));
                BanderaDireccionProveedor = true;
                txtTelefono.setText(rs.getString("telefonoproveedor"));
                BanderaTelefono = true;
                Integer Depar = rs.getInt("iddepartamento");
                cbxDepartamentos.setSelectedItem(((DepartamentosDAO)cbxDepartamentos.getModel()).searchSelectedItem(Depar));
                int Mpio = rs.getInt("idmunicipio");
                cbxMunicipios.setSelectedItem(((MunicipiosDAO)cbxMunicipios.getModel()).searchSelectedItem(Mpio));
                txtCorreoElectronico.setText(rs.getString("correo"));
                switch (rs.getInt("tipoproveedor")) {
                    case 0:
                    jrbProveedor.setSelected(true);
                    BanderaTipoProveedor = true;
                    break;
                    case 1:
                    jrbContratista.setSelected(true);
                    BanderaTipoProveedor = true;
                    break;
                    case 2:
                    jrbAmbosTiposProveedor.setSelected(true);
                    BanderaTipoProveedor = true;
                    break;
                }
                switch (rs.getInt("tiposervicio")) {
                    case 0:
                    jrbBien.setSelected(true);
                    BanderaTipoServicio = true;
                    break;
                    case 1:
                    jrbServicio.setSelected(true);
                    BanderaTipoServicio = true;
                    break;
                    case 2:
                    jrbAmbosTiposServicios.setSelected(true);
                    BanderaTipoServicio = true;
                    break;
                }
                switch (rs.getInt("contrato")) {
                    case 0:
                    jrbcontratosi.setSelected(true);
                    BanderaContrato = true;
                    break;
                    case 1:
                    jrbcontratono.setSelected(true);
                    BanderaContrato = true;
                    break;
                }
                java.util.Date fechafe = rs.getDate("fechaingreso");
                jdcFechaIngreso.setDate(fechafe);
                switch (rs.getInt("tipodocumentocompra")) {
                    case 0:
                    jrbOrdenCompra.setSelected(true);
                    BanderaTipoCompra = true;
                    break;
                    case 1:
                    jrbOrdenDespacho.setSelected(true);
                    BanderaTipoCompra = true;
                    break;
                }
                txtDescripcion.setText(rs.getString("descripcionbienservicio"));

            } else {
                JOptionPane.showMessageDialog(null, "Documento de Proveedor no Existe");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        bandera = true;*/
    }//GEN-LAST:event_btnBuscarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtblproveedores;
    // End of variables declaration//GEN-END:variables
}
